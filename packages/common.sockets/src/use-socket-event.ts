/* eslint-disable @typescript-eslint/no-explicit-any */
import { useEffect } from 'react';
import { useSocket } from './socket.provider';

/**
 * –•—É–∫ –¥–ª—è –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ —Å–æ–±—ã—Ç–∏—è —Å–æ–∫–µ—Ç–∞
 *
 * @param event –ò–º—è —Å–æ–±—ã—Ç–∏—è
 * @param handler –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏—è
 * @param deps –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —ç—Ñ—Ñ–µ–∫—Ç–∞
 */
export function useSocketEvent<T = any>(
  event: string,
  handler: (data: T) => void,
  deps: React.DependencyList = [],
): void {
  const { socket, isConnected } = useSocket();

  useEffect(() => {
    console.log(`üéß –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ —Å–æ–±—ã—Ç–∏–µ ${event}:`, { isConnected, socketId: socket?.id });

    if (!socket) {
      console.log(`‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ ${event}: —Å–æ–∫–µ—Ç –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω`);
      return;
    }

    socket.on(event, handler);
    console.log(`‚úÖ –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ —Å–æ–±—ã—Ç–∏–µ ${event} —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞`);

    return () => {
      socket.off(event, handler);
      console.log(`üîå –û—Ç–ø–∏—Å–∫–∞ –æ—Ç —Å–æ–±—ã—Ç–∏—è ${event}`);
    };
  }, [socket, event, ...deps]);
}

/**
 * –•—É–∫ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–±—ã—Ç–∏—è —á–µ—Ä–µ–∑ —Å–æ–∫–µ—Ç
 *
 * @param event –ò–º—è —Å–æ–±—ã—Ç–∏—è
 * @returns –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥–∞–Ω–Ω—ã—Ö
 */
export function useSocketEmit<T = any>(event: string): (data?: T) => void {
  const { socket, isConnected } = useSocket();

  return (data?: T) => {
    console.log(`üì° –ü–æ–ø—ã—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–±—ã—Ç–∏–µ ${event}:`, {
      data,
      isConnected,
      socketId: socket?.id,
    });

    if (socket && isConnected) {
      socket.emit(event, data);
      console.log(`‚úÖ –°–æ–±—ã—Ç–∏–µ ${event} –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ`);
    } else {
      console.warn(`‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–±—ã—Ç–∏–µ ${event}: —Å–æ–∫–µ—Ç –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω`, {
        hasSocket: !!socket,
        isConnected,
      });
    }
  };
}
