import { NetworkProvider, useNetworkControl, useNetworkAuthIntegration } from './index';
import { useNetworkStatus } from 'common.utils';

// –ü—Ä–∏–º–µ—Ä –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ —Å –∫–∞—Å—Ç–æ–º–Ω—ã–º —Å—Ç–∞—Ç—É—Å–æ–º —Å–µ—Ç–∏
const NetworkStatusExample = () => {
  const { isOnline, isReconnecting } = useNetworkStatus();

  if (isOnline && !isReconnecting) return null;

  return (
    <div className="fixed bottom-4 left-4 rounded-lg bg-gray-800 px-3 py-2 text-white">
      {!isOnline && <span>üî¥ –ù–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è</span>}
      {isReconnecting && <span>üü° –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è...</span>}
    </div>
  );
};

// –ü—Ä–∏–º–µ—Ä –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ —Å –∫–æ–Ω—Ç—Ä–æ–ª–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
const NotificationControlExample = () => {
  const { suppressNetworkNotifications, enableNetworkNotifications } = useNetworkControl();

  const handleSensitiveOperation = () => {
    suppressNetworkNotifications();
    // –í—ã–ø–æ–ª–Ω—è–µ–º –æ–ø–µ—Ä–∞—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –º–æ–∂–µ—Ç –≤—ã–∑–≤–∞—Ç—å —Å–µ—Ç–µ–≤—ã–µ –æ—à–∏–±–∫–∏
    setTimeout(() => {
      enableNetworkNotifications();
    }, 5000);
  };

  return <button onClick={handleSensitiveOperation}>–í—ã–ø–æ–ª–Ω–∏—Ç—å –æ–ø–µ—Ä–∞—Ü–∏—é –±–µ–∑ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π</button>;
};

// –ü—Ä–∏–º–µ—Ä –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
const AuthExample = () => {
  const { handleAuthError } = useNetworkAuthIntegration();

  const handleLogin = async (credentials: { email: string; password: string }) => {
    try {
      const response = await fetch('/api/auth/login', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify(credentials),
      });

      if (!response.ok) {
        const error = await response.json();
        handleAuthError({
          response: {
            status: response.status,
            data: error,
          },
        });
        return;
      }

      // –£—Å–ø–µ—à–Ω–∞—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è
      console.log('–£—Å–ø–µ—à–Ω—ã–π –≤—Ö–æ–¥');
    } catch (error) {
      handleAuthError(error);
    }
  };

  return (
    <button onClick={() => handleLogin({ email: 'test@example.com', password: 'password' })}>
      –í–æ–π—Ç–∏
    </button>
  );
};

// –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
export const AppExample = () => {
  return (
    <NetworkProvider suppressNotifications={false}>
      <div className="app">
        <h1>–ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Å–µ—Ç–µ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã</h1>

        <div className="examples">
          <div>
            <h3>–°—Ç–∞—Ç—É—Å —Å–µ—Ç–∏</h3>
            <NetworkStatusExample />
          </div>

          <div>
            <h3>–ö–æ–Ω—Ç—Ä–æ–ª—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π</h3>
            <NotificationControlExample />
          </div>

          <div>
            <h3>–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è</h3>
            <AuthExample />
          </div>
        </div>
      </div>
    </NetworkProvider>
  );
};

export default AppExample;
