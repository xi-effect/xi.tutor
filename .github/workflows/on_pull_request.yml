name: Development

on:
  pull_request:
  workflow_dispatch:

env:
  app_name: xi.web
  node_version: 20
  turbo_version: 2.4.0

jobs:
  namer:
    runs-on: ubuntu-latest

    steps:
      - name: Get branch & deployment name
        id: get_names
        run: |-
          branch_name=${{ github.event.pull_request.head.ref }}
          echo "branch_name=${branch_name}"
          echo "branch_name=${branch_name}" >> $GITHUB_OUTPUT

          deployment_name="${branch_name////-}"
          echo "deployment_name=${deployment_name}"
          echo "deployment_name=${deployment_name}" >> $GITHUB_OUTPUT

    outputs:
      branch_name: ${{ steps.get_names.outputs.branch_name }}
      deployment_name: ${{ steps.get_names.outputs.deployment_name }}

  analyze_files:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2

      - name: Filter paths
        uses: dorny/paths-filter@v2
        id: path_filter
        with:
          filters: .github/files.yml

    outputs:
      xi_web_files: ${{ steps.path_filter.outputs.xi_web_files }}
      lintable_files: ${{ steps.path_filter.outputs.lintable_files }}

  lint:
    needs: analyze_files
    if: needs.analyze_files.outputs.lintable_files == 'true'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2

      - name: Install pnpm (version from package.json)
        uses: pnpm/action-setup@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4.3.0
        with:
          node-version: ${{ env.node_version }}
          registry-url: https://registry.npmjs.org
          cache: pnpm

      - name: Install dependencies
        id: install
        run: pnpm install

      - name: Run format checker
        run: pnpm run format-check

      - name: Run linter
        if: success() || (failure() && (steps.install.conclusion == 'success'))
        run: pnpm run lint

  build_xi_web:
    needs:
      - namer
      - analyze_files
      - lint
    if: needs.analyze_files.outputs.xi_web_files == 'true'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.2.2

      - name: Install pnpm (version from package.json)
        uses: pnpm/action-setup@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4.3.0
        with:
          node-version: ${{ env.node_version }}
          registry-url: https://registry.npmjs.org
          cache: pnpm

      - name: Install turbo
        run: pnpm install -g turbo@${{ env.turbo_version }}

      - name: Turbo prune
        run: turbo prune --scope=${{ env.app_name }}

      - name: Install dependencies
        working-directory: ./out
        run: pnpm install

      - name: Build application
        working-directory: ./out
        run: npm run build --filter==${{ env.app_name }}

      - name: Upload build as an artifact
        uses: actions/upload-artifact@v4.6.0
        with:
          name: ${{ env.app_name }}
          path: ./out/apps/${{ env.app_name }}/build
