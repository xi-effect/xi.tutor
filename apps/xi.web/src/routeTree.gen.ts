/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router';

// Import Routes

import { Route as rootRoute } from './pages/__root';
import { Route as AboutImport } from './pages/about';
import { Route as appLayoutImport } from './pages/(app)/_layout';
import { Route as authSignupIndexImport } from './pages/(auth)/signup/index';
import { Route as authSigninIndexImport } from './pages/(auth)/signin/index';
import { Route as appCalendarIndexImport } from './pages/(app)/calendar/index';
import { Route as appLayoutIndexImport } from './pages/(app)/_layout/index';

// Create Virtual Routes

const appImport = createFileRoute('/(app)')();

// Create/Update Routes

const appRoute = appImport.update({
  id: '/(app)',
  getParentRoute: () => rootRoute,
} as any);

const AboutRoute = AboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any);

const appLayoutRoute = appLayoutImport.update({
  id: '/_layout',
  getParentRoute: () => appRoute,
} as any);

const authSignupIndexRoute = authSignupIndexImport.update({
  id: '/(auth)/signup/',
  path: '/signup/',
  getParentRoute: () => rootRoute,
} as any);

const authSigninIndexRoute = authSigninIndexImport.update({
  id: '/(auth)/signin/',
  path: '/signin/',
  getParentRoute: () => rootRoute,
} as any);

const appCalendarIndexRoute = appCalendarIndexImport.update({
  id: '/calendar/',
  path: '/calendar/',
  getParentRoute: () => appRoute,
} as any);

const appLayoutIndexRoute = appLayoutIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => appLayoutRoute,
} as any);

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/about': {
      id: '/about';
      path: '/about';
      fullPath: '/about';
      preLoaderRoute: typeof AboutImport;
      parentRoute: typeof rootRoute;
    };
    '/(app)': {
      id: '/(app)';
      path: '/';
      fullPath: '/';
      preLoaderRoute: typeof appImport;
      parentRoute: typeof rootRoute;
    };
    '/(app)/_layout': {
      id: '/(app)/_layout';
      path: '/';
      fullPath: '/';
      preLoaderRoute: typeof appLayoutImport;
      parentRoute: typeof appRoute;
    };
    '/(app)/_layout/': {
      id: '/(app)/_layout/';
      path: '/';
      fullPath: '/';
      preLoaderRoute: typeof appLayoutIndexImport;
      parentRoute: typeof appLayoutImport;
    };
    '/(app)/calendar/': {
      id: '/(app)/calendar/';
      path: '/calendar';
      fullPath: '/calendar';
      preLoaderRoute: typeof appCalendarIndexImport;
      parentRoute: typeof appImport;
    };
    '/(auth)/signin/': {
      id: '/(auth)/signin/';
      path: '/signin';
      fullPath: '/signin';
      preLoaderRoute: typeof authSigninIndexImport;
      parentRoute: typeof rootRoute;
    };
    '/(auth)/signup/': {
      id: '/(auth)/signup/';
      path: '/signup';
      fullPath: '/signup';
      preLoaderRoute: typeof authSignupIndexImport;
      parentRoute: typeof rootRoute;
    };
  }
}

// Create and export the route tree

interface appLayoutRouteChildren {
  appLayoutIndexRoute: typeof appLayoutIndexRoute;
}

const appLayoutRouteChildren: appLayoutRouteChildren = {
  appLayoutIndexRoute: appLayoutIndexRoute,
};

const appLayoutRouteWithChildren = appLayoutRoute._addFileChildren(appLayoutRouteChildren);

interface appRouteChildren {
  appLayoutRoute: typeof appLayoutRouteWithChildren;
  appCalendarIndexRoute: typeof appCalendarIndexRoute;
}

const appRouteChildren: appRouteChildren = {
  appLayoutRoute: appLayoutRouteWithChildren,
  appCalendarIndexRoute: appCalendarIndexRoute,
};

const appRouteWithChildren = appRoute._addFileChildren(appRouteChildren);

export interface FileRoutesByFullPath {
  '/about': typeof AboutRoute;
  '/': typeof appLayoutIndexRoute;
  '/calendar': typeof appCalendarIndexRoute;
  '/signin': typeof authSigninIndexRoute;
  '/signup': typeof authSignupIndexRoute;
}

export interface FileRoutesByTo {
  '/about': typeof AboutRoute;
  '/': typeof appLayoutIndexRoute;
  '/calendar': typeof appCalendarIndexRoute;
  '/signin': typeof authSigninIndexRoute;
  '/signup': typeof authSignupIndexRoute;
}

export interface FileRoutesById {
  __root__: typeof rootRoute;
  '/about': typeof AboutRoute;
  '/(app)': typeof appRouteWithChildren;
  '/(app)/_layout': typeof appLayoutRouteWithChildren;
  '/(app)/_layout/': typeof appLayoutIndexRoute;
  '/(app)/calendar/': typeof appCalendarIndexRoute;
  '/(auth)/signin/': typeof authSigninIndexRoute;
  '/(auth)/signup/': typeof authSignupIndexRoute;
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath;
  fullPaths: '/about' | '/' | '/calendar' | '/signin' | '/signup';
  fileRoutesByTo: FileRoutesByTo;
  to: '/about' | '/' | '/calendar' | '/signin' | '/signup';
  id:
    | '__root__'
    | '/about'
    | '/(app)'
    | '/(app)/_layout'
    | '/(app)/_layout/'
    | '/(app)/calendar/'
    | '/(auth)/signin/'
    | '/(auth)/signup/';
  fileRoutesById: FileRoutesById;
}

export interface RootRouteChildren {
  AboutRoute: typeof AboutRoute;
  appRoute: typeof appRouteWithChildren;
  authSigninIndexRoute: typeof authSigninIndexRoute;
  authSignupIndexRoute: typeof authSignupIndexRoute;
}

const rootRouteChildren: RootRouteChildren = {
  AboutRoute: AboutRoute,
  appRoute: appRouteWithChildren,
  authSigninIndexRoute: authSigninIndexRoute,
  authSignupIndexRoute: authSignupIndexRoute,
};

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>();

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/about",
        "/(app)",
        "/(auth)/signin/",
        "/(auth)/signup/"
      ]
    },
    "/about": {
      "filePath": "about.tsx"
    },
    "/(app)": {
      "filePath": "(app)",
      "children": [
        "/(app)/_layout",
        "/(app)/calendar/"
      ]
    },
    "/(app)/_layout": {
      "filePath": "(app)/_layout.tsx",
      "parent": "/(app)",
      "children": [
        "/(app)/_layout/"
      ]
    },
    "/(app)/_layout/": {
      "filePath": "(app)/_layout/index.tsx",
      "parent": "/(app)/_layout"
    },
    "/(app)/calendar/": {
      "filePath": "(app)/calendar/index.tsx",
      "parent": "/(app)"
    },
    "/(auth)/signin/": {
      "filePath": "(auth)/signin/index.tsx"
    },
    "/(auth)/signup/": {
      "filePath": "(auth)/signup/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
